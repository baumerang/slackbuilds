#!/bin/sh

# Slackware build script for channels-dvr

# Copyright 2019 Justin Teague Houston, U.S.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=channels-dvr
VERSION=${VERSION:-2019.04.22.2317}	# replace with version of program
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}		# the "_SBo" is required
BASEDIR=${BASEDIR:-/opt}
RUNUSER=${RUNUSER:-channels}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}	# For consistency's sake, use this
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}	# Drop the package in /tmp

if [ "$arch" = "amd64" ]; then
  arch="x86_64"
elif [ "$arch" = "armv8l" ]; then
  arch="armv7l"
elif [ "$arch" = "aarch64" ]; then
  arch="arm64"
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

wget -O $PKG/$BASEDIR/$PRGNM/$VERSION/linux-$ARCH.sha256 https://channels-dvr.s3.amazonaws.com/$VERSION/linux-$ARCH.sha256 

wget -O $PKG/$BASEDIR/$PRGNM/$VERSION/ffmpeg https://channels-dvr.s3.amazonaws.com/$VERSION/ffmpeg-linux-$ARCH

wget -O $PKG/$BASEDIR/$PRGNM/$VERSION/ffprobe https://channels-dvr.s3.amazonaws.com/$VERSION/ffprobe-linux-$ARCH

wget -O $PKG/$BASEDIR/$PRGNM/$VERSION/comskip https://channels-dvr.s3.amazonaws.com/$VERSION/comskip-linux-$ARCH

wget -O $PKG/$BASEDIR/$PRGNM/$VERSION/channels-dvr https://channels-dvr.s3.amazonaws.com/$VERSION/channels-dvr-linux-$ARCH

chmod +x $PKG/$BASEDIR/$PRGNM/$VERSION/*
ln -nsf $PKG/$BASEDIR/$PRGNM/$VERSION $PKG/$BASEDIR/$PRGNM/latest

# Create configuration file based on variables passed
mkdir -p $PKG/etc
echo "BASEDIR=$BASEDIR" >> $PKG/etc/$PRGNM.conf
echo "RUNUSER=$RUNSER" >> $PKG/etc/$PRGNM.conf

# Create and move Init Daemon file
mkdir -p $PKG/etc/rc.d
cat $CWD/rc.$PRGNAM > $PKG/etc/rc.d/rc.$PRGNAM
chmod +x $PKG/etc/rc.d/rc.$PRGNAM

# Also, include the SlackBuild script in the documentation directory
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Copy the slack-desc (and a custom doinst.sh if necessary) into ./install
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Make the package; be sure to leave it in $OUTPUT
# If package symlinks need to be created during install *before*
# your custom contents of doinst.sh runs, then add the -p switch to
# the makepkg command below -- see makepkg(8) for details
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
